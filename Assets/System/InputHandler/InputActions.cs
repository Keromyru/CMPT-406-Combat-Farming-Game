//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/System/InputHandler/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""InputPlayer"",
            ""id"": ""f0d28e76-1db7-46f1-a770-d350120f8cd7"",
            ""actions"": [
                {
                    ""name"": ""PlayerMovement"",
                    ""type"": ""Value"",
                    ""id"": ""57ea25a1-a92c-408f-9f44-b3705851997a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryAction"",
                    ""type"": ""Button"",
                    ""id"": ""edc53438-07c0-4b04-89e7-fb8bba08ee7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryAction"",
                    ""type"": ""Button"",
                    ""id"": ""c19322a2-3116-464d-a06e-a431d186b0c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar1"",
                    ""type"": ""Button"",
                    ""id"": ""5530f6da-1e49-444f-8247-9d0ea27831c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar2"",
                    ""type"": ""Button"",
                    ""id"": ""383b42a2-d3ca-4c3b-a44d-fdf5af87f725"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar3"",
                    ""type"": ""Button"",
                    ""id"": ""48492372-e18e-40e9-b766-7b889050b8ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar4"",
                    ""type"": ""Button"",
                    ""id"": ""a0dc62df-45a4-4fc9-80d7-1bfa3af11d03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""f615dd09-0681-4e33-b293-c1a650d565da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""a865f876-4ead-4d2a-9e31-4cab7a9336c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenMenuFromPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""dfdcce39-8878-4d6c-9c35-3e823b52013c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""574bb8d2-662e-4545-927c-0f0632454e72"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""284c067b-51f3-4eb2-9394-137c9514f7d4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""50686cfb-cea3-44ff-a913-10e0ee7f9c69"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9738d968-e1cf-4367-bf84-f75507489c27"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2f09b242-3dad-46fd-a90d-8016b889de71"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""acc51609-3974-4db8-b058-fb50fa418a0d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a1757bc-d9d5-4087-87bf-31b88669d0f0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c6f004c-2e79-492f-9bd4-dbbd6414cca8"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""524eb754-5117-4b06-b670-9c2233684037"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41b7074d-ee08-46e0-8fac-4dce305f6dac"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a1fc4a5-f938-4a1d-bdb6-77b27dc63e74"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b163dc35-fc4f-4636-b23e-76b8af873c7e"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db1e2f8e-0c6e-42b2-8277-d80218ee2cd7"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35b99f39-6723-44bb-9cdf-76c7ce3b6277"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenuFromPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""InputMenu"",
            ""id"": ""022769c2-2471-4428-968e-75acdf0f4c76"",
            ""actions"": [
                {
                    ""name"": ""MenuMovement"",
                    ""type"": ""Value"",
                    ""id"": ""ee042df1-981b-434a-93c8-1fcc9053b32b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftClickMenu"",
                    ""type"": ""Button"",
                    ""id"": ""b7b459d5-819a-4069-bb7f-d770dbe73e59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClickMenu"",
                    ""type"": ""Button"",
                    ""id"": ""e8f617a2-2804-431b-8725-f564bb360d69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""2aef9bbf-0e66-49f3-8a44-3c0dab413a4f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""e5a2cec0-a515-4b6d-ab7d-df066f50cb54"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""556f0b73-a8ac-4745-8883-ae96d3983a0c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5ded7b64-c9df-47c1-8a05-c3243f5f941a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6c2fa45d-6582-4abf-bfd3-92528670e636"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f429ab6b-2dcc-459e-b246-0007f85b721f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2a129b94-10f4-4d43-8ea5-c89d28db1353"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClickMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f9a13fc-ee7a-4278-9f3b-a03136ebc9e6"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClickMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d1e8f0c-9526-4f84-8e7c-b2151f6fef63"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""InputUI"",
            ""id"": ""d8e2910e-e4ff-4e8c-9bdc-d3e5805f43f2"",
            ""actions"": [
                {
                    ""name"": ""CloseInventory"",
                    ""type"": ""Button"",
                    ""id"": ""9ee95941-c806-498f-bb1a-47da5b64c58a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EButton"",
                    ""type"": ""Button"",
                    ""id"": ""11b9147e-e220-4339-b6b2-af6d7d66181f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftClickUI"",
                    ""type"": ""Button"",
                    ""id"": ""bdc63cdc-b1c1-4258-b57c-b3b51ce897fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClickUI"",
                    ""type"": ""Button"",
                    ""id"": ""324c2003-1478-4eaf-8970-7154125b7c93"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenMenuFromUI"",
                    ""type"": ""Button"",
                    ""id"": ""1b26a227-266e-46e3-a354-e6099a74cc11"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e3af9b0a-1132-4b86-a9aa-f5a409dcd158"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""264d7e7c-0fa8-48c6-a8a1-3b2a6ad8ec27"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d906c298-40cb-416e-9052-435a628d9f89"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClickUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06c555ff-b758-457a-b3fb-1f555ce911c9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClickUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73d994ee-a1a5-4246-80a3-cabc184ef22e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenuFromUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InputPlayer
        m_InputPlayer = asset.FindActionMap("InputPlayer", throwIfNotFound: true);
        m_InputPlayer_PlayerMovement = m_InputPlayer.FindAction("PlayerMovement", throwIfNotFound: true);
        m_InputPlayer_PrimaryAction = m_InputPlayer.FindAction("PrimaryAction", throwIfNotFound: true);
        m_InputPlayer_SecondaryAction = m_InputPlayer.FindAction("SecondaryAction", throwIfNotFound: true);
        m_InputPlayer_Hotbar1 = m_InputPlayer.FindAction("Hotbar1", throwIfNotFound: true);
        m_InputPlayer_Hotbar2 = m_InputPlayer.FindAction("Hotbar2", throwIfNotFound: true);
        m_InputPlayer_Hotbar3 = m_InputPlayer.FindAction("Hotbar3", throwIfNotFound: true);
        m_InputPlayer_Hotbar4 = m_InputPlayer.FindAction("Hotbar4", throwIfNotFound: true);
        m_InputPlayer_Interact = m_InputPlayer.FindAction("Interact", throwIfNotFound: true);
        m_InputPlayer_OpenInventory = m_InputPlayer.FindAction("OpenInventory", throwIfNotFound: true);
        m_InputPlayer_OpenMenuFromPlayer = m_InputPlayer.FindAction("OpenMenuFromPlayer", throwIfNotFound: true);
        // InputMenu
        m_InputMenu = asset.FindActionMap("InputMenu", throwIfNotFound: true);
        m_InputMenu_MenuMovement = m_InputMenu.FindAction("MenuMovement", throwIfNotFound: true);
        m_InputMenu_LeftClickMenu = m_InputMenu.FindAction("LeftClickMenu", throwIfNotFound: true);
        m_InputMenu_RightClickMenu = m_InputMenu.FindAction("RightClickMenu", throwIfNotFound: true);
        m_InputMenu_CloseMenu = m_InputMenu.FindAction("CloseMenu", throwIfNotFound: true);
        // InputUI
        m_InputUI = asset.FindActionMap("InputUI", throwIfNotFound: true);
        m_InputUI_CloseInventory = m_InputUI.FindAction("CloseInventory", throwIfNotFound: true);
        m_InputUI_EButton = m_InputUI.FindAction("EButton", throwIfNotFound: true);
        m_InputUI_LeftClickUI = m_InputUI.FindAction("LeftClickUI", throwIfNotFound: true);
        m_InputUI_RightClickUI = m_InputUI.FindAction("RightClickUI", throwIfNotFound: true);
        m_InputUI_OpenMenuFromUI = m_InputUI.FindAction("OpenMenuFromUI", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InputPlayer
    private readonly InputActionMap m_InputPlayer;
    private IInputPlayerActions m_InputPlayerActionsCallbackInterface;
    private readonly InputAction m_InputPlayer_PlayerMovement;
    private readonly InputAction m_InputPlayer_PrimaryAction;
    private readonly InputAction m_InputPlayer_SecondaryAction;
    private readonly InputAction m_InputPlayer_Hotbar1;
    private readonly InputAction m_InputPlayer_Hotbar2;
    private readonly InputAction m_InputPlayer_Hotbar3;
    private readonly InputAction m_InputPlayer_Hotbar4;
    private readonly InputAction m_InputPlayer_Interact;
    private readonly InputAction m_InputPlayer_OpenInventory;
    private readonly InputAction m_InputPlayer_OpenMenuFromPlayer;
    public struct InputPlayerActions
    {
        private @InputActions m_Wrapper;
        public InputPlayerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerMovement => m_Wrapper.m_InputPlayer_PlayerMovement;
        public InputAction @PrimaryAction => m_Wrapper.m_InputPlayer_PrimaryAction;
        public InputAction @SecondaryAction => m_Wrapper.m_InputPlayer_SecondaryAction;
        public InputAction @Hotbar1 => m_Wrapper.m_InputPlayer_Hotbar1;
        public InputAction @Hotbar2 => m_Wrapper.m_InputPlayer_Hotbar2;
        public InputAction @Hotbar3 => m_Wrapper.m_InputPlayer_Hotbar3;
        public InputAction @Hotbar4 => m_Wrapper.m_InputPlayer_Hotbar4;
        public InputAction @Interact => m_Wrapper.m_InputPlayer_Interact;
        public InputAction @OpenInventory => m_Wrapper.m_InputPlayer_OpenInventory;
        public InputAction @OpenMenuFromPlayer => m_Wrapper.m_InputPlayer_OpenMenuFromPlayer;
        public InputActionMap Get() { return m_Wrapper.m_InputPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputPlayerActions set) { return set.Get(); }
        public void SetCallbacks(IInputPlayerActions instance)
        {
            if (m_Wrapper.m_InputPlayerActionsCallbackInterface != null)
            {
                @PlayerMovement.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnPlayerMovement;
                @PlayerMovement.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnPlayerMovement;
                @PlayerMovement.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnPlayerMovement;
                @PrimaryAction.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnPrimaryAction;
                @PrimaryAction.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnPrimaryAction;
                @PrimaryAction.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnPrimaryAction;
                @SecondaryAction.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnSecondaryAction;
                @SecondaryAction.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnSecondaryAction;
                @SecondaryAction.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnSecondaryAction;
                @Hotbar1.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar1;
                @Hotbar1.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar1;
                @Hotbar1.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar1;
                @Hotbar2.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar2;
                @Hotbar2.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar2;
                @Hotbar2.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar2;
                @Hotbar3.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar3;
                @Hotbar3.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar3;
                @Hotbar3.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar3;
                @Hotbar4.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar4;
                @Hotbar4.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar4;
                @Hotbar4.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnHotbar4;
                @Interact.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnInteract;
                @OpenInventory.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnOpenInventory;
                @OpenMenuFromPlayer.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnOpenMenuFromPlayer;
                @OpenMenuFromPlayer.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnOpenMenuFromPlayer;
                @OpenMenuFromPlayer.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnOpenMenuFromPlayer;
            }
            m_Wrapper.m_InputPlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PlayerMovement.started += instance.OnPlayerMovement;
                @PlayerMovement.performed += instance.OnPlayerMovement;
                @PlayerMovement.canceled += instance.OnPlayerMovement;
                @PrimaryAction.started += instance.OnPrimaryAction;
                @PrimaryAction.performed += instance.OnPrimaryAction;
                @PrimaryAction.canceled += instance.OnPrimaryAction;
                @SecondaryAction.started += instance.OnSecondaryAction;
                @SecondaryAction.performed += instance.OnSecondaryAction;
                @SecondaryAction.canceled += instance.OnSecondaryAction;
                @Hotbar1.started += instance.OnHotbar1;
                @Hotbar1.performed += instance.OnHotbar1;
                @Hotbar1.canceled += instance.OnHotbar1;
                @Hotbar2.started += instance.OnHotbar2;
                @Hotbar2.performed += instance.OnHotbar2;
                @Hotbar2.canceled += instance.OnHotbar2;
                @Hotbar3.started += instance.OnHotbar3;
                @Hotbar3.performed += instance.OnHotbar3;
                @Hotbar3.canceled += instance.OnHotbar3;
                @Hotbar4.started += instance.OnHotbar4;
                @Hotbar4.performed += instance.OnHotbar4;
                @Hotbar4.canceled += instance.OnHotbar4;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @OpenInventory.started += instance.OnOpenInventory;
                @OpenInventory.performed += instance.OnOpenInventory;
                @OpenInventory.canceled += instance.OnOpenInventory;
                @OpenMenuFromPlayer.started += instance.OnOpenMenuFromPlayer;
                @OpenMenuFromPlayer.performed += instance.OnOpenMenuFromPlayer;
                @OpenMenuFromPlayer.canceled += instance.OnOpenMenuFromPlayer;
            }
        }
    }
    public InputPlayerActions @InputPlayer => new InputPlayerActions(this);

    // InputMenu
    private readonly InputActionMap m_InputMenu;
    private IInputMenuActions m_InputMenuActionsCallbackInterface;
    private readonly InputAction m_InputMenu_MenuMovement;
    private readonly InputAction m_InputMenu_LeftClickMenu;
    private readonly InputAction m_InputMenu_RightClickMenu;
    private readonly InputAction m_InputMenu_CloseMenu;
    public struct InputMenuActions
    {
        private @InputActions m_Wrapper;
        public InputMenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MenuMovement => m_Wrapper.m_InputMenu_MenuMovement;
        public InputAction @LeftClickMenu => m_Wrapper.m_InputMenu_LeftClickMenu;
        public InputAction @RightClickMenu => m_Wrapper.m_InputMenu_RightClickMenu;
        public InputAction @CloseMenu => m_Wrapper.m_InputMenu_CloseMenu;
        public InputActionMap Get() { return m_Wrapper.m_InputMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputMenuActions set) { return set.Get(); }
        public void SetCallbacks(IInputMenuActions instance)
        {
            if (m_Wrapper.m_InputMenuActionsCallbackInterface != null)
            {
                @MenuMovement.started -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnMenuMovement;
                @MenuMovement.performed -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnMenuMovement;
                @MenuMovement.canceled -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnMenuMovement;
                @LeftClickMenu.started -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnLeftClickMenu;
                @LeftClickMenu.performed -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnLeftClickMenu;
                @LeftClickMenu.canceled -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnLeftClickMenu;
                @RightClickMenu.started -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnRightClickMenu;
                @RightClickMenu.performed -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnRightClickMenu;
                @RightClickMenu.canceled -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnRightClickMenu;
                @CloseMenu.started -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnCloseMenu;
                @CloseMenu.performed -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnCloseMenu;
                @CloseMenu.canceled -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnCloseMenu;
            }
            m_Wrapper.m_InputMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MenuMovement.started += instance.OnMenuMovement;
                @MenuMovement.performed += instance.OnMenuMovement;
                @MenuMovement.canceled += instance.OnMenuMovement;
                @LeftClickMenu.started += instance.OnLeftClickMenu;
                @LeftClickMenu.performed += instance.OnLeftClickMenu;
                @LeftClickMenu.canceled += instance.OnLeftClickMenu;
                @RightClickMenu.started += instance.OnRightClickMenu;
                @RightClickMenu.performed += instance.OnRightClickMenu;
                @RightClickMenu.canceled += instance.OnRightClickMenu;
                @CloseMenu.started += instance.OnCloseMenu;
                @CloseMenu.performed += instance.OnCloseMenu;
                @CloseMenu.canceled += instance.OnCloseMenu;
            }
        }
    }
    public InputMenuActions @InputMenu => new InputMenuActions(this);

    // InputUI
    private readonly InputActionMap m_InputUI;
    private IInputUIActions m_InputUIActionsCallbackInterface;
    private readonly InputAction m_InputUI_CloseInventory;
    private readonly InputAction m_InputUI_EButton;
    private readonly InputAction m_InputUI_LeftClickUI;
    private readonly InputAction m_InputUI_RightClickUI;
    private readonly InputAction m_InputUI_OpenMenuFromUI;
    public struct InputUIActions
    {
        private @InputActions m_Wrapper;
        public InputUIActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseInventory => m_Wrapper.m_InputUI_CloseInventory;
        public InputAction @EButton => m_Wrapper.m_InputUI_EButton;
        public InputAction @LeftClickUI => m_Wrapper.m_InputUI_LeftClickUI;
        public InputAction @RightClickUI => m_Wrapper.m_InputUI_RightClickUI;
        public InputAction @OpenMenuFromUI => m_Wrapper.m_InputUI_OpenMenuFromUI;
        public InputActionMap Get() { return m_Wrapper.m_InputUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputUIActions set) { return set.Get(); }
        public void SetCallbacks(IInputUIActions instance)
        {
            if (m_Wrapper.m_InputUIActionsCallbackInterface != null)
            {
                @CloseInventory.started -= m_Wrapper.m_InputUIActionsCallbackInterface.OnCloseInventory;
                @CloseInventory.performed -= m_Wrapper.m_InputUIActionsCallbackInterface.OnCloseInventory;
                @CloseInventory.canceled -= m_Wrapper.m_InputUIActionsCallbackInterface.OnCloseInventory;
                @EButton.started -= m_Wrapper.m_InputUIActionsCallbackInterface.OnEButton;
                @EButton.performed -= m_Wrapper.m_InputUIActionsCallbackInterface.OnEButton;
                @EButton.canceled -= m_Wrapper.m_InputUIActionsCallbackInterface.OnEButton;
                @LeftClickUI.started -= m_Wrapper.m_InputUIActionsCallbackInterface.OnLeftClickUI;
                @LeftClickUI.performed -= m_Wrapper.m_InputUIActionsCallbackInterface.OnLeftClickUI;
                @LeftClickUI.canceled -= m_Wrapper.m_InputUIActionsCallbackInterface.OnLeftClickUI;
                @RightClickUI.started -= m_Wrapper.m_InputUIActionsCallbackInterface.OnRightClickUI;
                @RightClickUI.performed -= m_Wrapper.m_InputUIActionsCallbackInterface.OnRightClickUI;
                @RightClickUI.canceled -= m_Wrapper.m_InputUIActionsCallbackInterface.OnRightClickUI;
                @OpenMenuFromUI.started -= m_Wrapper.m_InputUIActionsCallbackInterface.OnOpenMenuFromUI;
                @OpenMenuFromUI.performed -= m_Wrapper.m_InputUIActionsCallbackInterface.OnOpenMenuFromUI;
                @OpenMenuFromUI.canceled -= m_Wrapper.m_InputUIActionsCallbackInterface.OnOpenMenuFromUI;
            }
            m_Wrapper.m_InputUIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CloseInventory.started += instance.OnCloseInventory;
                @CloseInventory.performed += instance.OnCloseInventory;
                @CloseInventory.canceled += instance.OnCloseInventory;
                @EButton.started += instance.OnEButton;
                @EButton.performed += instance.OnEButton;
                @EButton.canceled += instance.OnEButton;
                @LeftClickUI.started += instance.OnLeftClickUI;
                @LeftClickUI.performed += instance.OnLeftClickUI;
                @LeftClickUI.canceled += instance.OnLeftClickUI;
                @RightClickUI.started += instance.OnRightClickUI;
                @RightClickUI.performed += instance.OnRightClickUI;
                @RightClickUI.canceled += instance.OnRightClickUI;
                @OpenMenuFromUI.started += instance.OnOpenMenuFromUI;
                @OpenMenuFromUI.performed += instance.OnOpenMenuFromUI;
                @OpenMenuFromUI.canceled += instance.OnOpenMenuFromUI;
            }
        }
    }
    public InputUIActions @InputUI => new InputUIActions(this);
    public interface IInputPlayerActions
    {
        void OnPlayerMovement(InputAction.CallbackContext context);
        void OnPrimaryAction(InputAction.CallbackContext context);
        void OnSecondaryAction(InputAction.CallbackContext context);
        void OnHotbar1(InputAction.CallbackContext context);
        void OnHotbar2(InputAction.CallbackContext context);
        void OnHotbar3(InputAction.CallbackContext context);
        void OnHotbar4(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnOpenInventory(InputAction.CallbackContext context);
        void OnOpenMenuFromPlayer(InputAction.CallbackContext context);
    }
    public interface IInputMenuActions
    {
        void OnMenuMovement(InputAction.CallbackContext context);
        void OnLeftClickMenu(InputAction.CallbackContext context);
        void OnRightClickMenu(InputAction.CallbackContext context);
        void OnCloseMenu(InputAction.CallbackContext context);
    }
    public interface IInputUIActions
    {
        void OnCloseInventory(InputAction.CallbackContext context);
        void OnEButton(InputAction.CallbackContext context);
        void OnLeftClickUI(InputAction.CallbackContext context);
        void OnRightClickUI(InputAction.CallbackContext context);
        void OnOpenMenuFromUI(InputAction.CallbackContext context);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/System/InputHandler/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Pointer"",
            ""id"": ""adfcbf82-fe66-4d0f-acf7-ed98afdfe18c"",
            ""actions"": [
                {
                    ""name"": ""Clicks"",
                    ""type"": ""PassThrough"",
                    ""id"": ""62f3100e-f54f-4ff7-b692-a9b5e4eccaeb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""01000900-9d2f-400b-8a4c-d00f6e9262ed"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clicks"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""180adc95-ffa6-4434-a1cc-16fd3f00b304"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clicks"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""InputPlayer"",
            ""id"": ""f0d28e76-1db7-46f1-a770-d350120f8cd7"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""57ea25a1-a92c-408f-9f44-b3705851997a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryAction"",
                    ""type"": ""Button"",
                    ""id"": ""edc53438-07c0-4b04-89e7-fb8bba08ee7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryAction"",
                    ""type"": ""Button"",
                    ""id"": ""c19322a2-3116-464d-a06e-a431d186b0c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""574bb8d2-662e-4545-927c-0f0632454e72"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""284c067b-51f3-4eb2-9394-137c9514f7d4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""50686cfb-cea3-44ff-a913-10e0ee7f9c69"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9738d968-e1cf-4367-bf84-f75507489c27"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2f09b242-3dad-46fd-a90d-8016b889de71"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""acc51609-3974-4db8-b058-fb50fa418a0d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a1757bc-d9d5-4087-87bf-31b88669d0f0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""InputMenu"",
            ""id"": ""022769c2-2471-4428-968e-75acdf0f4c76"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""ee042df1-981b-434a-93c8-1fcc9053b32b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""e5a2cec0-a515-4b6d-ab7d-df066f50cb54"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""556f0b73-a8ac-4745-8883-ae96d3983a0c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5ded7b64-c9df-47c1-8a05-c3243f5f941a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6c2fa45d-6582-4abf-bfd3-92528670e636"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f429ab6b-2dcc-459e-b246-0007f85b721f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""InputUI"",
            ""id"": ""d8e2910e-e4ff-4e8c-9bdc-d3e5805f43f2"",
            ""actions"": [
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""9ee95941-c806-498f-bb1a-47da5b64c58a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""11b9147e-e220-4339-b6b2-af6d7d66181f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar1"",
                    ""type"": ""Button"",
                    ""id"": ""1763e85e-8600-4625-ae77-09c0daaf8a33"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar2"",
                    ""type"": ""Button"",
                    ""id"": ""33fb08c7-039d-47ca-9cf7-636664ed1cd3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar3"",
                    ""type"": ""Button"",
                    ""id"": ""adbfb8a4-c9f7-4821-82b4-0430158de8e2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar4"",
                    ""type"": ""Button"",
                    ""id"": ""5f88be5f-528a-496a-a7db-72c6af0bc877"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e3af9b0a-1132-4b86-a9aa-f5a409dcd158"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""264d7e7c-0fa8-48c6-a8a1-3b2a6ad8ec27"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0ed6ee8-8170-46a8-99da-739735fc5067"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f323a35-0934-430a-8d3a-52ac24a5aea5"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83e031d9-d267-4b09-ae28-622c1a3eec43"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bfd3c86-d6da-4993-b7c9-2002af27fa9d"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Pointer
        m_Pointer = asset.FindActionMap("Pointer", throwIfNotFound: true);
        m_Pointer_Clicks = m_Pointer.FindAction("Clicks", throwIfNotFound: true);
        // InputPlayer
        m_InputPlayer = asset.FindActionMap("InputPlayer", throwIfNotFound: true);
        m_InputPlayer_Movement = m_InputPlayer.FindAction("Movement", throwIfNotFound: true);
        m_InputPlayer_PrimaryAction = m_InputPlayer.FindAction("PrimaryAction", throwIfNotFound: true);
        m_InputPlayer_SecondaryAction = m_InputPlayer.FindAction("SecondaryAction", throwIfNotFound: true);
        // InputMenu
        m_InputMenu = asset.FindActionMap("InputMenu", throwIfNotFound: true);
        m_InputMenu_Movement = m_InputMenu.FindAction("Movement", throwIfNotFound: true);
        // InputUI
        m_InputUI = asset.FindActionMap("InputUI", throwIfNotFound: true);
        m_InputUI_Inventory = m_InputUI.FindAction("Inventory", throwIfNotFound: true);
        m_InputUI_Interact = m_InputUI.FindAction("Interact", throwIfNotFound: true);
        m_InputUI_Hotbar1 = m_InputUI.FindAction("Hotbar1", throwIfNotFound: true);
        m_InputUI_Hotbar2 = m_InputUI.FindAction("Hotbar2", throwIfNotFound: true);
        m_InputUI_Hotbar3 = m_InputUI.FindAction("Hotbar3", throwIfNotFound: true);
        m_InputUI_Hotbar4 = m_InputUI.FindAction("Hotbar4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Pointer
    private readonly InputActionMap m_Pointer;
    private IPointerActions m_PointerActionsCallbackInterface;
    private readonly InputAction m_Pointer_Clicks;
    public struct PointerActions
    {
        private @InputActions m_Wrapper;
        public PointerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Clicks => m_Wrapper.m_Pointer_Clicks;
        public InputActionMap Get() { return m_Wrapper.m_Pointer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PointerActions set) { return set.Get(); }
        public void SetCallbacks(IPointerActions instance)
        {
            if (m_Wrapper.m_PointerActionsCallbackInterface != null)
            {
                @Clicks.started -= m_Wrapper.m_PointerActionsCallbackInterface.OnClicks;
                @Clicks.performed -= m_Wrapper.m_PointerActionsCallbackInterface.OnClicks;
                @Clicks.canceled -= m_Wrapper.m_PointerActionsCallbackInterface.OnClicks;
            }
            m_Wrapper.m_PointerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Clicks.started += instance.OnClicks;
                @Clicks.performed += instance.OnClicks;
                @Clicks.canceled += instance.OnClicks;
            }
        }
    }
    public PointerActions @Pointer => new PointerActions(this);

    // InputPlayer
    private readonly InputActionMap m_InputPlayer;
    private IInputPlayerActions m_InputPlayerActionsCallbackInterface;
    private readonly InputAction m_InputPlayer_Movement;
    private readonly InputAction m_InputPlayer_PrimaryAction;
    private readonly InputAction m_InputPlayer_SecondaryAction;
    public struct InputPlayerActions
    {
        private @InputActions m_Wrapper;
        public InputPlayerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_InputPlayer_Movement;
        public InputAction @PrimaryAction => m_Wrapper.m_InputPlayer_PrimaryAction;
        public InputAction @SecondaryAction => m_Wrapper.m_InputPlayer_SecondaryAction;
        public InputActionMap Get() { return m_Wrapper.m_InputPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputPlayerActions set) { return set.Get(); }
        public void SetCallbacks(IInputPlayerActions instance)
        {
            if (m_Wrapper.m_InputPlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnMovement;
                @PrimaryAction.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnPrimaryAction;
                @PrimaryAction.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnPrimaryAction;
                @PrimaryAction.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnPrimaryAction;
                @SecondaryAction.started -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnSecondaryAction;
                @SecondaryAction.performed -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnSecondaryAction;
                @SecondaryAction.canceled -= m_Wrapper.m_InputPlayerActionsCallbackInterface.OnSecondaryAction;
            }
            m_Wrapper.m_InputPlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @PrimaryAction.started += instance.OnPrimaryAction;
                @PrimaryAction.performed += instance.OnPrimaryAction;
                @PrimaryAction.canceled += instance.OnPrimaryAction;
                @SecondaryAction.started += instance.OnSecondaryAction;
                @SecondaryAction.performed += instance.OnSecondaryAction;
                @SecondaryAction.canceled += instance.OnSecondaryAction;
            }
        }
    }
    public InputPlayerActions @InputPlayer => new InputPlayerActions(this);

    // InputMenu
    private readonly InputActionMap m_InputMenu;
    private IInputMenuActions m_InputMenuActionsCallbackInterface;
    private readonly InputAction m_InputMenu_Movement;
    public struct InputMenuActions
    {
        private @InputActions m_Wrapper;
        public InputMenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_InputMenu_Movement;
        public InputActionMap Get() { return m_Wrapper.m_InputMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputMenuActions set) { return set.Get(); }
        public void SetCallbacks(IInputMenuActions instance)
        {
            if (m_Wrapper.m_InputMenuActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_InputMenuActionsCallbackInterface.OnMovement;
            }
            m_Wrapper.m_InputMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
            }
        }
    }
    public InputMenuActions @InputMenu => new InputMenuActions(this);

    // InputUI
    private readonly InputActionMap m_InputUI;
    private IInputUIActions m_InputUIActionsCallbackInterface;
    private readonly InputAction m_InputUI_Inventory;
    private readonly InputAction m_InputUI_Interact;
    private readonly InputAction m_InputUI_Hotbar1;
    private readonly InputAction m_InputUI_Hotbar2;
    private readonly InputAction m_InputUI_Hotbar3;
    private readonly InputAction m_InputUI_Hotbar4;
    public struct InputUIActions
    {
        private @InputActions m_Wrapper;
        public InputUIActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Inventory => m_Wrapper.m_InputUI_Inventory;
        public InputAction @Interact => m_Wrapper.m_InputUI_Interact;
        public InputAction @Hotbar1 => m_Wrapper.m_InputUI_Hotbar1;
        public InputAction @Hotbar2 => m_Wrapper.m_InputUI_Hotbar2;
        public InputAction @Hotbar3 => m_Wrapper.m_InputUI_Hotbar3;
        public InputAction @Hotbar4 => m_Wrapper.m_InputUI_Hotbar4;
        public InputActionMap Get() { return m_Wrapper.m_InputUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputUIActions set) { return set.Get(); }
        public void SetCallbacks(IInputUIActions instance)
        {
            if (m_Wrapper.m_InputUIActionsCallbackInterface != null)
            {
                @Inventory.started -= m_Wrapper.m_InputUIActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_InputUIActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_InputUIActionsCallbackInterface.OnInventory;
                @Interact.started -= m_Wrapper.m_InputUIActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_InputUIActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_InputUIActionsCallbackInterface.OnInteract;
                @Hotbar1.started -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar1;
                @Hotbar1.performed -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar1;
                @Hotbar1.canceled -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar1;
                @Hotbar2.started -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar2;
                @Hotbar2.performed -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar2;
                @Hotbar2.canceled -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar2;
                @Hotbar3.started -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar3;
                @Hotbar3.performed -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar3;
                @Hotbar3.canceled -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar3;
                @Hotbar4.started -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar4;
                @Hotbar4.performed -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar4;
                @Hotbar4.canceled -= m_Wrapper.m_InputUIActionsCallbackInterface.OnHotbar4;
            }
            m_Wrapper.m_InputUIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Hotbar1.started += instance.OnHotbar1;
                @Hotbar1.performed += instance.OnHotbar1;
                @Hotbar1.canceled += instance.OnHotbar1;
                @Hotbar2.started += instance.OnHotbar2;
                @Hotbar2.performed += instance.OnHotbar2;
                @Hotbar2.canceled += instance.OnHotbar2;
                @Hotbar3.started += instance.OnHotbar3;
                @Hotbar3.performed += instance.OnHotbar3;
                @Hotbar3.canceled += instance.OnHotbar3;
                @Hotbar4.started += instance.OnHotbar4;
                @Hotbar4.performed += instance.OnHotbar4;
                @Hotbar4.canceled += instance.OnHotbar4;
            }
        }
    }
    public InputUIActions @InputUI => new InputUIActions(this);
    public interface IPointerActions
    {
        void OnClicks(InputAction.CallbackContext context);
    }
    public interface IInputPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnPrimaryAction(InputAction.CallbackContext context);
        void OnSecondaryAction(InputAction.CallbackContext context);
    }
    public interface IInputMenuActions
    {
        void OnMovement(InputAction.CallbackContext context);
    }
    public interface IInputUIActions
    {
        void OnInventory(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnHotbar1(InputAction.CallbackContext context);
        void OnHotbar2(InputAction.CallbackContext context);
        void OnHotbar3(InputAction.CallbackContext context);
        void OnHotbar4(InputAction.CallbackContext context);
    }
}
